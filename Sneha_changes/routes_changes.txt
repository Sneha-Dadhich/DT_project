# -*- encoding: utf-8 -*-
"""
Copyright (c) 2019 - present AppSeed.us
"""

from apps.home import blueprint
from flask import render_template, request
from flask_login import login_required, current_user
from jinja2 import TemplateNotFound
import wikipedia
import random
import requests
from flask import Flask, render_template, request, jsonify

responses = {
    "hi": ["Hello!", "Hi there!", "Hey!"],
    "how are you?": ["I'm good, thank you!", "I'm doing well, thanks for asking.", "All good!"],
    "what is your name?": ["I'm just a humble chatbot.", "I'm your friendly neighborhood bot!", "You can call me ChatBot."],
    "bye": ["Goodbye!", "See you later!", "Bye! Take care!"]
}

def fetch_wiki_results(user_input):
    try:
        result = wikipedia.summary(user_input, sentences=5)
        return result
    except (wikipedia.exceptions.PageError, wikipedia.exceptions.DisambiguationError):
        return "Sorry, result not found"
    except requests.exceptions.ConnectionError:
        return "Sorry, there is no internet connection"
    except wikipedia.exceptions.WikipediaException:
        pass

@blueprint.route('/index')
@login_required
def index():

    return render_template('home/index.html', 
                           segment='index', 
                           user_id=current_user.id)

@blueprint.route('/<template>')
@login_required
def route_template(template):

    try:
        if template=="dashboard":
            pass
        if not template.endswith('.html'):
            template += '.html'

        # Detect the current page
        segment = get_segment(request)

        # Serve the file (if exists) from app/templates/home/FILE.html
        return render_template("home/" + template, segment=segment)

    except TemplateNotFound:
        return render_template('home/page-404.html'), 404

    except:
        return render_template('home/page-500.html'), 500

@blueprint.route('/dashboard.html',methods=["POST"])
@login_required
def chatbot():
    if request.method == "POST":
        input_text = request.form.get("chat_input")
        
        if not input_text:
            return jsonify({"error": "No input provided"}), 400

        input_text = input_text.lower()
        #file_url = f"C:\\Sneha\\Programs1\\Python\\Internship\\DreamTeam\\chatBot_for_sir_code\\{username}.csv"
        try:
            if input_text in responses.keys():
                chatBot_answer = random.choice(responses[input_text])
                return jsonify({"response": chatBot_answer})
            else:
                results = fetch_wiki_results(input_text)
                return jsonify({"response": results})
        except Exception as e:
            return jsonify({"error": str(e)}), 500

    return render_template("home/dashboard.html")


# Helper - Extract current page name from request
def get_segment(request):

    try:
        segment = request.path.split('/')[-1]

        if segment == '':
            segment = 'index'

        return segment

    except:
        return None
